% Provide functions working with lists.
(
	% Map a list with a callback.
	(def map #List,Callback :: (
		(var Result (list))
		(var MapInner (scope #Head,Tail :: (
			(set Result (++ Result (call Callback Head)))
			(if (!= 0 (length Tail)) (
				(call MapInner (head Tail) (tail Tail))
			))
		)))
		(call MapInner (head List) (tail List))
		(Result)
	))
	(export map/2)
)
